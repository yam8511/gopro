version: '3'

services:
  gitea:
    image: gitea/gitea:latest
    ports:
      - "10022:22"
      - "3000:3000"
    volumes:
      - ./data:/data
    depends_on:
      - pgsql

  pgsql:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=qwe123
      - POSTGRES_DB=gitea

  adminer:
    image: adminer
    ports:
      - "8080:8080"

  registry:
    image: registry:2.6.2
    ports:
      - "5000:5000"
    volumes:
      - ./registry/lib:/var/lib/registry
      - ./registry/etc:/etc/docker/registry

  humpback-web:
    image: humpbacks/humpback-web:latest
    ports:
      - "5252:5252"
    volumes:
      - ./humpback/dbFiles:/humpback-web/dbFiles
    environment:
      - HUMPBACK_LISTEN_PORT=5252

  drone-server:
    image: drone/drone:0.8
    ports:
      - 8000:8000
    volumes:
      - ./drone:/var/lib/drone/
    restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_HOST=http://drone-server:8000
      - DRONE_GITEA=true
      - DRONE_GITEA_URL=http://gitea:3000
      - DRONE_GITEA_GIT_USERNAME=demo
      - DRONE_GITEA_GIT_PASSWORD=qwe123
      # - DRONE_GITHUB=true
      # - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      # - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_SECRET=drone-ci

  drone-agent:
    image: drone/agent:0.8
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=drone-ci

  fluentd:
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    links:
      - "elasticsearch"
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    logging:
        driver: "json-file"
        options:
            max-size: 100m
            max-file: "5"

  elasticsearch:
    image: elasticsearch

  kibana:
    image: kibana
    ports:
      - 5601:5601

  web:
    image: golang:1.11-alpine
    ports:
      - "80:8080"
    command: go run main.go
    working_dir: /app
    volumes:
      - ./demo:/app
      - $GOPATH:/go
    depends_on:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: fluentd:24224
        tag: httpd.access

  ubuntu-1:
    build: ./sshd
    image: sshd
    tty: true

  ubuntu-2:
    build: ./sshd
    image: sshd
    tty: true
