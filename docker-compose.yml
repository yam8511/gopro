version: '3'

services:
  gitea:
    image: gitea/gitea:1.9.5
    ports:
      - "10022:22"
      - "3000:3000"
    volumes:
      - ./data/gitea:/data

  drone-server:
    image: drone/drone:1.6.1
    ports:
      - 8000:8000
    volumes:
      - ./data/drone:/var/lib/drone/
    restart: always
    environment:
      - DRONE_GITEA_SERVER=http://gitea:3000
      - DRONE_GITEA_CLIENT_ID=e7c88909-07ed-47d1-9591-4777da3ee5ab
      - DRONE_GITEA_CLIENT_SECRET=rR5D-1pw6CASI4ZkBTHZuE7QwWQnlZ3vn3ktgwJhSIM=
      - DRONE_RPC_SECRET=my-drone-server-secret
      - DRONE_SERVER_HOST=drone-server:8000
      - DRONE_SERVER_PORT=:8000
      - DRONE_SERVER_PROTO=http
      - DRONE_USER_CREATE=username:demo,admin:true

  drone-agent:
    image: drone/agent:1.6.1
    command: agent
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone-server:8000
      - DRONE_RPC_SECRET=my-drone-server-secret
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=my-agent1

  ubuntu-1:
    build: ./sshd
    image: sshd
    tty: true
    hostname: zuolar1
    depends_on:
      - dind
    ports:
      - "9922:22"
    volumes:
      - dd:/var/run

  dind:
    image: docker:dind
    tty: true
    privileged: true
    ports:
      - "8888:8888"
    volumes:
      - dd:/var/run
      - ./docker/daemon.json:/etc/docker/daemon.json

  portainer:
    image: portainer/portainer
    ports:
      - "9001:9000"
    volumes:
      - dd:/var/run

volumes:
  dd:
    driver: local
